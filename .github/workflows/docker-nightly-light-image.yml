name: Ring Docker Nightly Image CI (Light)

on:
  schedule:
    - cron: '30 2 * * *'
  push:
    branches: [ "master" ]
    paths:
    - 'Dockerfile.nightly.light'
    - 'entrypoint.sh'
    - 'patches/**'
    - '.github/workflows/docker-nightly-light-image.yml'
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-publish:
    name: Build and Publish Nightly Light Image
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to Quay.io
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_ROBOT_TOKEN }}

    - name: Generate build timestamp
      id: timestamp
      run: echo "timestamp=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          quay.io/ydrag0n/ring
          ghcr.io/ysdragon/ring
          ${{ secrets.DOCKER_HUB_USERNAME }}/ring
        tags: |
          type=raw,value=nightly-light
          type=raw,value=nightly-light-${{ steps.timestamp.outputs.timestamp }}

    - name: Build and push multi-platform image
      id: build-and-push
      uses: docker/build-push-action@v6
      with:
        context: .
        file: Dockerfile.nightly.light
        platforms: linux/amd64,linux/arm64,linux/riscv64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha,scope=build-nightly-light
        cache-to: type=gha,mode=max,scope=build-nightly-light