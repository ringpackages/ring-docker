name: Ring Docker Image CI (Light)

on:
  push:
    branches: [ "master" ]
    paths-ignore:
    - '**.md'
    - '.github/workflows/docker-full-image.yml'
    - 'Dockerfile'
  release:
    types: [ published ]

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-publish:
    name: Build and Publish Light Image
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to Quay.io
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_ROBOT_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          quay.io/ydrag0n/ring
          ghcr.io/ysdragon/ring
          ${{ secrets.DOCKER_HUB_USERNAME }}/ring
        tags: |
          type=raw,value=light,enable={{is_default_branch}}

    - name: Build and push multi-platform image
      id: build-and-push
      uses: docker/build-push-action@v6
      with:
        context: .
        file: Dockerfile.light
        platforms: linux/amd64,linux/arm64,linux/riscv64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha,scope=build-light
        cache-to: type=gha,mode=max,scope=build-light

    - name: Install Cosign
      if: github.event_name != 'pull_request'
      uses: sigstore/cosign-installer@v3.9.1

    - name: Sign the published Docker image
      if: github.event_name != 'pull_request'
      env:
        COSIGN_KEY: ${{secrets.COSIGN_KEY}}
        COSIGN_PASSWORD: ${{secrets.COSIGN_PASSWORD}}
      run: |
        echo "Signing manifest digest: ${{ steps.build-and-push.outputs.digest }}"
        TAGS="${{ steps.meta.outputs.tags }}"
        echo "Signing the following tags:"
        echo "${TAGS}"
        echo "${TAGS}" | while IFS= read -r tag; do
          if [ -n "$tag" ]; then
            echo "--> Signing $tag"
            cosign sign --key env://COSIGN_KEY --yes "$tag"
          fi
        done
