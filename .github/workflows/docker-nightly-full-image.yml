name: Ring Docker Nightly Image CI (Full)

on:
  schedule:
    - cron: '0 2 * * *'
  push:
    branches: [ "master" ]
    paths:
    - 'Dockerfile.nightly'
    - 'entrypoint.sh'
    - 'patches/**'
    - '.github/workflows/docker-nightly-full-image.yml'
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
        - arch: amd64
          os: ubuntu-24.04
        - arch: arm64
          os: ubuntu-24.04-arm
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to Quay.io
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_ROBOT_TOKEN }}

    - name: Extract Docker metadata for labels
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          quay.io/ydrag0n/ring
          ghcr.io/ysdragon/ring
          ${{ secrets.DOCKER_HUB_USERNAME }}/ring

    - name: Generate build timestamp
      id: timestamp
      run: echo "timestamp=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

    - name: Build and push arch-specific image
      id: build-and-push
      uses: docker/build-push-action@v6
      with:
        context: .
        file: Dockerfile.nightly
        platforms: linux/${{ matrix.arch }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          quay.io/ydrag0n/ring:nightly-${{ steps.timestamp.outputs.timestamp }}-${{ matrix.arch }}
          ghcr.io/ysdragon/ring:nightly-${{ steps.timestamp.outputs.timestamp }}-${{ matrix.arch }}
          ${{ secrets.DOCKER_HUB_USERNAME }}/ring:nightly-${{ steps.timestamp.outputs.timestamp }}-${{ matrix.arch }}
        labels: ${{ steps.meta.outputs.labels }}
        provenance: false
        cache-from: type=gha,scope=build-nightly-${{ matrix.arch }}
        cache-to: type=gha,mode=max,scope=build-nightly-${{ matrix.arch }}

  push:
    needs: [ build ]
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to Quay.io
      uses: docker/login-action@v3
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_ROBOT_TOKEN }}

    - name: Generate build timestamp
      id: timestamp
      run: echo "timestamp=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

    - name: Extract Docker metadata for final tags
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          quay.io/ydrag0n/ring
          ghcr.io/ysdragon/ring
          ${{ secrets.DOCKER_HUB_USERNAME }}/ring
        tags: |
          type=raw,value=nightly
          type=raw,value=nightly-full
          type=raw,value=nightly-${{ steps.timestamp.outputs.timestamp }}

    - name: Create and push manifest list
      run: |
        FINAL_TAGS="${{ steps.meta.outputs.tags }}"

        echo "Creating and pushing manifest for tags:"
        echo "$FINAL_TAGS"

        for tag in $FINAL_TAGS; do
          echo "--> Processing tag: $tag"
          
          # Extract registry from tag
          if [[ "$tag" == quay.io/* ]]; then
            IMG_AMD64="quay.io/ydrag0n/ring:nightly-${{ steps.timestamp.outputs.timestamp }}-amd64"
            IMG_ARM64="quay.io/ydrag0n/ring:nightly-${{ steps.timestamp.outputs.timestamp }}-arm64"
          elif [[ "$tag" == ghcr.io/* ]]; then
            IMG_AMD64="ghcr.io/ysdragon/ring:nightly-${{ steps.timestamp.outputs.timestamp }}-amd64"
            IMG_ARM64="ghcr.io/ysdragon/ring:nightly-${{ steps.timestamp.outputs.timestamp }}-arm64"
          else
            IMG_AMD64="${{ secrets.DOCKER_HUB_USERNAME }}/ring:nightly-${{ steps.timestamp.outputs.timestamp }}-amd64"
            IMG_ARM64="${{ secrets.DOCKER_HUB_USERNAME }}/ring:nightly-${{ steps.timestamp.outputs.timestamp }}-arm64"
          fi
          
          docker manifest create "$tag" "$IMG_AMD64" "$IMG_ARM64"
          docker manifest push "$tag"
        done

  cleanup-intermediate-tags:
    needs: [ push ]
    if: always() && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - name: Install Crane
      uses: iarekylew00t/crane-installer@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to Quay.io
      uses: docker/login-action@v3
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_ROBOT_TOKEN }}

    - name: Generate build timestamp
      id: timestamp
      run: echo "timestamp=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

    - name: Delete intermediate timestamp-tagged images
      run: |
        echo "Deleting intermediate images..."
        for arch in amd64 arm64; do
          crane delete quay.io/ydrag0n/ring:nightly-${{ steps.timestamp.outputs.timestamp }}-$arch || echo "Quay.io tag for $arch not found or could not be deleted."
          crane delete ghcr.io/ysdragon/ring:nightly-${{ steps.timestamp.outputs.timestamp }}-$arch || echo "GHCR tag for $arch not found or could not be deleted."
          crane delete ${{ secrets.DOCKER_HUB_USERNAME }}/ring:nightly-${{ steps.timestamp.outputs.timestamp }}-$arch || echo "Docker Hub tag for $arch not found or could not be deleted."
        done
        echo "Cleanup complete."